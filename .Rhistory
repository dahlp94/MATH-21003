q()
mu <- 1
# generate x from mu
n <- 100
x <- rnorm(n, mu=mu)
x <- rnorm(n, mean=mu)
x
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
mu_list <- seq(-2,2, by=0.01)
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
which.max(lhd_list)
mu_list[which.max(lhd_list)]
# now increase the sample size
n <- 10^3
x <- rnorm(n, mean=mu)
# List of values that I want to guess for the parameter
# i.e. assuming mu is unknown
# make it dense.
mu_list <- seq(-2,2, by=0.01)
# evalue the density at eah individual value of mu
# i.e. we are computing the likelihood
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
which.max(lhd_list)
mu_list[which.max(lhd_list)]
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
mle_list <- sapply(1:1000, FUN=function(i) {
x <- rnorm(n, mean=mu)
# List of values that I want to guess for the parameter
# i.e. assuming mu is unknown
# make it dense.
mu_list <- seq(-2,2, by=0.01)
# evalue the density at eah individual value of mu
# i.e. we are computing the likelihood
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
which.max(lhd_list)
mu_list[which.max(lhd_list)]
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
} )
example(stan_model, package = "rstan", run.dontrun = TRUE)
library("rstan") # observe startup messages
getwd()
setwd("C:/Users/pd006/Desktop/internship_search/statistics/MATH-21003")
help(dbinom)
# number of trials
n <- 10
# probability of success
p <- 0.3
# Probability of excatly k success
k <- 3
# Density at x = 3
p_3 <- dbinom(x = k, size = n, prob = p)
p_3
cat("P(X = 3) =", round(p_3, 3))
cat("P(X = 3) =", round(p_3, 4))
cat("P(X = 3) =", round(p_3, 3))
p_3_or_more <- pbinom(q = k, size = n, prob = p, lower.tail = FALSE)
p_3_or_more
# another way to print
print(paste("P(X >= 3) =", round(p_3_or_more, 3)))
# another way to print
paste("P(X >= 3) =", round(p_3_or_more, 3))
# another way to print
paste("P(X >= 3) =", round(p_3_or_more, 3))
# Probability of a Range (AND)
# Probability of 3 and 7 success (inclusive)
p_3_to_7 <- pbinom(q = 7, size = n, prob = p, lower.tail = FALSE) -
pbinom(q = 2, size = n, prob = p, lower.tail = FALSE)
