q()
mu <- 1
# generate x from mu
n <- 100
x <- rnorm(n, mu=mu)
x <- rnorm(n, mean=mu)
x
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
mu_list <- seq(-2,2, by=0.01)
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
which.max(lhd_list)
mu_list[which.max(lhd_list)]
# now increase the sample size
n <- 10^3
x <- rnorm(n, mean=mu)
# List of values that I want to guess for the parameter
# i.e. assuming mu is unknown
# make it dense.
mu_list <- seq(-2,2, by=0.01)
# evalue the density at eah individual value of mu
# i.e. we are computing the likelihood
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
which.max(lhd_list)
mu_list[which.max(lhd_list)]
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
mle_list <- sapply(1:1000, FUN=function(i) {
x <- rnorm(n, mean=mu)
# List of values that I want to guess for the parameter
# i.e. assuming mu is unknown
# make it dense.
mu_list <- seq(-2,2, by=0.01)
# evalue the density at eah individual value of mu
# i.e. we are computing the likelihood
lhd_list <- sapply(mu_list, FUN=function(mu_candidate) {
prod(dnorm(x, mean=mu_candidate))
})
which.max(lhd_list)
mu_list[which.max(lhd_list)]
plot(y=lhd_list, x=mu_list, type="l", xlab="mu", ylab="L(mu)")
} )
example(stan_model, package = "rstan", run.dontrun = TRUE)
library("rstan") # observe startup messages
getwd()
cd
setwd("C:/Users/pd006/Desktop/internship_search/statistics/MATH-21003")
# Demonstrating Law of Large Numbers
set.seed(1)
# We define the population parameters
true_mean <- 10
true_sd <- 2
# Simulation
simulate_mean <- function(n) {
samples <- rnorm(n, mean = true_mean, sd = true_sd)
return(mean(samples))
}
# Simulating for different sample sizes
sample_sizes <- c(10, 100, 1000, 10000)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Simulating for different sample sizes
sample_sizes <- c(10, 100, 1000, 10000, 100000)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Demonstrating Law of Large Numbers
set.seed(1)
# We define the population parameters
true_mean <- 10
true_sd <- 2
# Simulation
simulate_mean <- function(n) {
samples <- rnorm(n, mean = true_mean, sd = true_sd)
return(mean(samples))
}
# Simulating for different sample sizes
sample_sizes <- c(10, 100, 1000, 10000, 100000)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example"
)
# Simulating for different sample sizes
sample_sizes <- c(10, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example"
)
abline(h = true_mean, col = "red", lty = 2)
# Add error bars
arrows(log10(sample_sizes), mean_results - sd_results,
log10(sample_sizes), mean_results + sd_results,
code = 3, angle = 90, length = 0.1, col = "darkgray")
sd_results <- apply(results, 2, sd)
abline(h = true_mean, col = "red", lty = 2, lwd = 2)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example",
ylim = c(true_mean - 1, true_mean + 1),
)
abline(h = true_mean, col = "red", lty = 2, lwd = 2)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example",
ylim = c(true_mean - 1, true_mean + 0.5),
)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example",
ylim = c(true_mean - 0.5, true_mean + 0.5),
)
abline(h = true_mean, col = "red", lty = 2, lwd = 2)
# Simulating for different sample sizes
sample_sizes <- c(1, 10, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example",
ylim = c(true_mean - 0.5, true_mean + 0.5),
)
abline(h = true_mean, col = "red", lty = 2, lwd = 2)
# Simulating for different sample sizes
sample_sizes <- c(10, 50,  10^2, 10^3, 10^4, 10^5, 10^6, 10^7)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example",
ylim = c(true_mean - 0.5, true_mean + 0.5),
)
abline(h = true_mean, col = "red", lty = 2, lwd = 2)
# Simulating for different sample sizes
sample_sizes <- c(10, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example",
ylim = c(true_mean - 0.5, true_mean + 0.5),
)
abline(h = true_mean, col = "red", lty = 2, lwd = 2)
# This demonstration shows that larger samples give us better estimates
# This demonstration shows that larger samples give us better estimates
# of the true average, which is the main idea behind the Law of Large Numbers.
# Demonstrating Law of Large Numbers
set.seed(1)
# We define the population parameters
true_mean <- 10
true_sd <- 2
# Simulation
simulate_mean <- function(n) {
samples <- rnorm(n, mean = true_mean, sd = true_sd)
return(mean(samples))
}
# Simulating for different sample sizes
sample_sizes <- c(10, 10^2, 10^3, 10^4, 10^5, 10^6, 10^7)
results <- sapply(sample_sizes, simulate_mean)
data.frame(Sample_Sizes = sample_sizes, Sample_Mean = results)
# Plot results
plot(log10(sample_sizes), results, type = "b",
xlab = "Sample Size in Base 10",
y_lab = "Sample Mean",
main = "Law of Large Numbers Example",
ylim = c(true_mean - 0.5, true_mean + 0.5),
)
abline(h = true_mean, col = "red", lty = 2, lwd = 2)
# This demonstration shows that larger samples give us better estimates
# This demonstration shows that larger samples give us better estimates
# of the true average, which is the main idea behind the Law of Large Numbers.
# This demonstration shows that larger samples give us better estimates
# of the true average, which is the main idea behind the Law of Large Numbers.
